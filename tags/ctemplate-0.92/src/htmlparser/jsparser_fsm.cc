/* Simplified finite state machine for tracking of javascript states
 * Auto generated by generate_fsm.py. Please do not edit.
 */

#define JSPARSER_NUM_STATES 16

enum jsparser_state_internal_enum {
  JSPARSER_STATE_INT_JS_TEXT,
  JSPARSER_STATE_INT_JS_Q,
  JSPARSER_STATE_INT_JS_Q_E,
  JSPARSER_STATE_INT_JS_DQ,
  JSPARSER_STATE_INT_JS_DQ_E,
  JSPARSER_STATE_INT_JS_SLASH,
  JSPARSER_STATE_INT_JS_REGEXP_SLASH,
  JSPARSER_STATE_INT_JS_REGEXP,
  JSPARSER_STATE_INT_JS_REGEXP_BRACKET,
  JSPARSER_STATE_INT_JS_REGEXP_BRACKET_E,
  JSPARSER_STATE_INT_JS_REGEXP_E,
  JSPARSER_STATE_INT_JS_COMMENT_LN,
  JSPARSER_STATE_INT_JS_COMMENT_ML,
  JSPARSER_STATE_INT_JS_COMMENT_ML_CLOSE,
  JSPARSER_STATE_INT_JS_COMMENT_AFTER
};

static const int jsparser_states_external[] = {
  JSPARSER_STATE_TEXT,
  JSPARSER_STATE_Q,
  JSPARSER_STATE_Q,
  JSPARSER_STATE_DQ,
  JSPARSER_STATE_DQ,
  JSPARSER_STATE_TEXT,
  JSPARSER_STATE_TEXT,
  JSPARSER_STATE_REGEXP,
  JSPARSER_STATE_REGEXP,
  JSPARSER_STATE_REGEXP,
  JSPARSER_STATE_REGEXP,
  JSPARSER_STATE_COMMENT,
  JSPARSER_STATE_COMMENT,
  JSPARSER_STATE_COMMENT,
  JSPARSER_STATE_TEXT
};

static const char * jsparser_states_internal_names[] = {
  "js_text",
  "js_q",
  "js_q_e",
  "js_dq",
  "js_dq_e",
  "js_slash",
  "js_regexp_slash",
  "js_regexp",
  "js_regexp_bracket",
  "js_regexp_bracket_e",
  "js_regexp_e",
  "js_comment_ln",
  "js_comment_ml",
  "js_comment_ml_close",
  "js_comment_after"
};

static const struct statetable_transitions_s jsparser_state_transitions[] = {
  { "[:default:]", JSPARSER_STATE_INT_JS_COMMENT_AFTER, JSPARSER_STATE_INT_JS_TEXT },
  { "/", JSPARSER_STATE_INT_JS_COMMENT_AFTER, JSPARSER_STATE_INT_JS_SLASH },
  { "\"", JSPARSER_STATE_INT_JS_COMMENT_AFTER, JSPARSER_STATE_INT_JS_DQ },
  { "\'", JSPARSER_STATE_INT_JS_COMMENT_AFTER, JSPARSER_STATE_INT_JS_Q },
  { "[:default:]", JSPARSER_STATE_INT_JS_COMMENT_ML_CLOSE, JSPARSER_STATE_INT_JS_COMMENT_ML },
  { "/", JSPARSER_STATE_INT_JS_COMMENT_ML_CLOSE, JSPARSER_STATE_INT_JS_COMMENT_AFTER },
  { "[:default:]", JSPARSER_STATE_INT_JS_COMMENT_ML, JSPARSER_STATE_INT_JS_COMMENT_ML },
  { "*", JSPARSER_STATE_INT_JS_COMMENT_ML, JSPARSER_STATE_INT_JS_COMMENT_ML_CLOSE },
  { "[:default:]", JSPARSER_STATE_INT_JS_COMMENT_LN, JSPARSER_STATE_INT_JS_COMMENT_LN },
  { "\n", JSPARSER_STATE_INT_JS_COMMENT_LN, JSPARSER_STATE_INT_JS_COMMENT_AFTER },
  { "[:default:]", JSPARSER_STATE_INT_JS_REGEXP_E, JSPARSER_STATE_INT_JS_REGEXP },
  { "[:default:]", JSPARSER_STATE_INT_JS_REGEXP_BRACKET_E, JSPARSER_STATE_INT_JS_REGEXP_BRACKET },
  { "[:default:]", JSPARSER_STATE_INT_JS_REGEXP_BRACKET, JSPARSER_STATE_INT_JS_REGEXP_BRACKET },
  { "]", JSPARSER_STATE_INT_JS_REGEXP_BRACKET, JSPARSER_STATE_INT_JS_REGEXP },
  { "\\", JSPARSER_STATE_INT_JS_REGEXP_BRACKET, JSPARSER_STATE_INT_JS_REGEXP_BRACKET_E },
  { "[:default:]", JSPARSER_STATE_INT_JS_REGEXP, JSPARSER_STATE_INT_JS_REGEXP },
  { "/", JSPARSER_STATE_INT_JS_REGEXP, JSPARSER_STATE_INT_JS_TEXT },
  { "[", JSPARSER_STATE_INT_JS_REGEXP, JSPARSER_STATE_INT_JS_REGEXP_BRACKET },
  { "\\", JSPARSER_STATE_INT_JS_REGEXP, JSPARSER_STATE_INT_JS_REGEXP_E },
  { "[:default:]", JSPARSER_STATE_INT_JS_REGEXP_SLASH, JSPARSER_STATE_INT_JS_REGEXP },
  { "[", JSPARSER_STATE_INT_JS_REGEXP_SLASH, JSPARSER_STATE_INT_JS_REGEXP_BRACKET },
  { "\\", JSPARSER_STATE_INT_JS_REGEXP_SLASH, JSPARSER_STATE_INT_JS_REGEXP_E },
  { "*", JSPARSER_STATE_INT_JS_REGEXP_SLASH, JSPARSER_STATE_INT_JS_COMMENT_ML },
  { "/", JSPARSER_STATE_INT_JS_REGEXP_SLASH, JSPARSER_STATE_INT_JS_COMMENT_LN },
  { "[:default:]", JSPARSER_STATE_INT_JS_SLASH, JSPARSER_STATE_INT_JS_TEXT },
  { "*", JSPARSER_STATE_INT_JS_SLASH, JSPARSER_STATE_INT_JS_COMMENT_ML },
  { "/", JSPARSER_STATE_INT_JS_SLASH, JSPARSER_STATE_INT_JS_COMMENT_LN },
  { "[:default:]", JSPARSER_STATE_INT_JS_DQ_E, JSPARSER_STATE_INT_JS_DQ },
  { "[:default:]", JSPARSER_STATE_INT_JS_DQ, JSPARSER_STATE_INT_JS_DQ },
  { "\"", JSPARSER_STATE_INT_JS_DQ, JSPARSER_STATE_INT_JS_TEXT },
  { "\\", JSPARSER_STATE_INT_JS_DQ, JSPARSER_STATE_INT_JS_DQ_E },
  { "[:default:]", JSPARSER_STATE_INT_JS_Q_E, JSPARSER_STATE_INT_JS_Q },
  { "[:default:]", JSPARSER_STATE_INT_JS_Q, JSPARSER_STATE_INT_JS_Q },
  { "\'", JSPARSER_STATE_INT_JS_Q, JSPARSER_STATE_INT_JS_TEXT },
  { "\\", JSPARSER_STATE_INT_JS_Q, JSPARSER_STATE_INT_JS_Q_E },
  { "[:default:]", JSPARSER_STATE_INT_JS_TEXT, JSPARSER_STATE_INT_JS_TEXT },
  { "/", JSPARSER_STATE_INT_JS_TEXT, JSPARSER_STATE_INT_JS_SLASH },
  { "\"", JSPARSER_STATE_INT_JS_TEXT, JSPARSER_STATE_INT_JS_DQ },
  { "\'", JSPARSER_STATE_INT_JS_TEXT, JSPARSER_STATE_INT_JS_Q },
  { NULL, STATEMACHINE_ERROR, STATEMACHINE_ERROR }
};
